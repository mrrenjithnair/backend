swagger: "2.0"
info:
  version: "0.0.1"
  title: Residence API
# during dev, should point to your local machine
host: localhost:10020
# basePath prefixes all resource paths
basePath: /apiService
#
schemes:
  - http
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
securityDefinitions:
  api_key:
    type: apiKey
    in: header
    name: api_key
paths:

  /getPreferenceValues:
    x-swagger-router-controller: preferenceController
    get:
      # security:
      #   - api_key: [ ]
      operationId: getPreferenceValues
      parameters:
        - name: project_id
          type: string
          in: query
          required: false
      description: Get onboarding related details
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SPSuccessResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/SPFailureResponse"
    
  /authenticate:
    x-swagger-router-controller: securityController
    post:
      description: Authenticates the user
      operationId: authenticate
      parameters:
        - name: authRequest
          in: body
          required: true
          schema:
            $ref: "#/definitions/AuthenticateRequest"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SPSuccessResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/SPFailureResponse"
  /validateToken:
    x-swagger-router-controller: securityController
    get:
      security:
        - api_key: [ ]
      description: Validate api token
      operationId: validateToken
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SPSuccessResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/SPFailureResponse"

  /player:
    x-swagger-router-controller: playerController
    get:
      security:
        - api_key: [ ]
      operationId: getPlayerList
      description: get player List
      parameters:
         - name: clubId
           type: string
           in: query
           required: false
         - name: teamId
           type: string
           in: query
           required: false
         - name: playerId
           type: string
           in: query
           required: false
         - name: userId
           type: string
           in: query
           required: false
           
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SPSuccessResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/SPFailureResponse"
    post:
      description: insert or update player
      operationId: insertOrUpdatePlayer
      parameters:
        - name: player
          in: body
          required: true
          schema:
            $ref: "#/definitions/player"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SPSuccessResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/SPFailureResponse"

  /tournament:
    x-swagger-router-controller: tournamentController
    get:
      security:
        - api_key: [ ]
      operationId: getTournament
      description: get Tournament 
      parameters:
         - name: clubId
           type: string
           in: query
           required: false
         - name: userId
           type: string
           in: query
           required: false
         - name: tournamentId
           type: string
           in: query
           required: false
         - name: list
           type: string
           in: query
           required: false
         - name: cluAdmin
           type: string
           in: query
           required: false
         - name: auctionPending
           type: string
           in: query
           required: false
        
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SPSuccessResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/SPFailureResponse"
    post:
      description: Insert Or Update Tournament
      operationId: insertOrUpdateTournament
      parameters:
        - name: tournament
          in: body
          required: true
          schema:
            $ref: "#/definitions/tournament"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SPSuccessResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/SPFailureResponse"

  
  /clubAdmin:
    x-swagger-router-controller: clubController
    get:
      security:
        - api_key: [ ]
      operationId: getClubAdminList
      description: get Club Admin List
      parameters:
        - name: userId
          type: string
          in: query
          required: false
        - name: clubId
          type: string
          in: query
          required: false
        - name: assigned
          type: string
          in: query
          required: false
        - name: superAdmin
          type: string
          in: query
          required: false
          
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SPSuccessResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/SPFailureResponse"
    post:
      security:
        - api_key: [ ]
      description: insert or update club admin
      operationId: clubAdminInsertOrUpdate
      parameters:
        - name: clubAdmin
          in: body
          required: true
          schema:
            $ref: "#/definitions/clubAdmin"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SPSuccessResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/SPFailureResponse"

  /request:
    x-swagger-router-controller: requestController
    get:
      security:
        - api_key: [ ]
      operationId: getClubRequest
      description: get Club Request List
      parameters:
        - name: userId
          type: string
          in: query
          required: false
        - name: clubId
          type: string
          in: query
          required: false
        - name: assigned
          type: string
          in: query
          required: false
        - name: superAdmin
          type: string
          in: query
          required: false
          
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SPSuccessResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/SPFailureResponse"
    post:
      security:
        - api_key: [ ]
      description: insert Or Update Request
      operationId: insertOrUpdateRequest
      parameters:
        - name: request
          in: body
          required: true
          schema:
            $ref: "#/definitions/request"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SPSuccessResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/SPFailureResponse"

  /joinClubOrApprove:
    x-swagger-router-controller: clubController
    post:
      security:
        - api_key: [ ]
      description: join or approve admin
      operationId: joinClubOrApprove
      parameters:
        - name: clubObj
          in: body
          required: true
          schema:
            $ref: "#/definitions/clubRequest"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SPSuccessResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/SPFailureResponse"

  
  /club:
    x-swagger-router-controller: clubController
    get:
      security:
        - api_key: [ ]
      operationId: getClubList
      description: get Club List
      parameters:
         - name: userId
           type: string
           in: query
           required: false
         - name: clubId
           type: string
           in: query
           required: false
         - name: approved
           type: string
           in: query
           required: false
         - name: superAdmin
           type: string
           in: query
           required: false
         - name: assigned
           type: string
           in: query
           required: false
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SPSuccessResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/SPFailureResponse"
    post:
      security:
        - api_key: [ ]
      description: insert or update club
      operationId: insertOrUpdateClub
      parameters:
        - name: club
          in: body
          required: true
          schema:
            $ref: "#/definitions/club"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SPSuccessResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/SPFailureResponse"
  /auctionPlayer:
    x-swagger-router-controller: auctionController
    get:
      security:
        - api_key: [ ]
      operationId: getPlayerForAuction
      description: get Player For Auction
      parameters:
        - name: clubId
          type: string
          in: query
          required: true
        - name: tournamentId
          type: string
          in: query
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SPSuccessResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/SPFailureResponse"
    post:
      security:
        - api_key: [ ]
      description: insert or update club admin
      operationId: insertOrUpdateAuction
      parameters:
        - name: auctionPlayer
          in: body
          required: true
          schema:
            $ref: "#/definitions/auctionPlayer"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SPSuccessResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/SPFailureResponse"


  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  AuthenticateRequest:
    required:
    - username
    - password
    properties:
      username:
        type: string
      password:
        type: string
  player:
    required:
    - firstName
    - lastName
    - dob
    - emailId
    properties:
      firstName:
        type: string
      lastName:
        type: string
      emailId:
        type: string
      dob:
        type: integer
      username:
        type: string
      password:
        type: string

  clubAdmin:
    required:
    - firstName
    - lastName
    - emailId
    properties:
      firstName:
        type: string
      lastName:
        type: string
      emailId:
        type: string
      dob:
        type: integer
      username:
        type: string
      password:
        type: string
      clubId:
        type: integer

  request:
    required:
    - clubId
    - userId
    - type
    properties:
      clubId:
        type: integer
      userId:
        type: integer
      type:
        type: string
      tournamentId:
        type: integer

  clubRequest:
      required:
      - clubId
      - userId
      properties:
        clubId:
          type: integer
        userId:
          type: integer
        
  club:
    required:
    - name
    - location
    - address
    - sportType
    properties:
      name:
        type: string
      location:
        type: string
      address:
        type: string
      sportType:
        type: integer
      logo:
        type: string
      banner:
        type: string
  tournament:
    required:
    - name
    - clubId
    - memberTotal
    - teamTotal
    properties:
      name:
        type: string
      logo:
        type: string
      clubId:
        type: integer
      teamTotal:
        type: integer
      memberTotal:
        type: integer
      startDate:
        type: integer
      endDate:
        type: integer
  auctionPlayer:
    required:
    - teamId
    - tournamentId
    - playerUserId
    - requestId
    properties:
      teamId:
        type: integer
      tournamentId:
        type: integer
      playerUserId:
        type: integer
      requestId:
        type: integer
      
       
  SPSuccessResponse:
    description: HTTP 200 success response. This is used for all success responses.
    properties:
      message:
        type: string
  SPFailureResponse:
    description: Generic failure response.
